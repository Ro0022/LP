from Crypto.Cipher import DES
from Crypto.Util.Padding import pad, unpad
import base64

# Key must be 8 bytes for DES
key = b'8bytekey'  # Example key (must be exactly 8 bytes)

# Create DES cipher object
cipher = DES.new(key, DES.MODE_ECB)

# Text to encrypt
plaintext = "Hello, DES encryption!"

# Encrypt
padded_text = pad(plaintext.encode(), DES.block_size)  # Pad text to a multiple of 8 bytes
encrypted_bytes = cipher.encrypt(padded_text)  # Perform encryption

# Encode the encrypted bytes to Base64 to make them readable
encrypted_base64 = base64.b64encode(encrypted_bytes).decode()

# Display encrypted text
print("Encrypted:", encrypted_base64)

# Decrypt
cipher_dec = DES.new(key, DES.MODE_ECB)  # Create a new cipher object for decryption

# Decode the encrypted text from Base64 and decrypt
decrypted_padded = cipher_dec.decrypt(base64.b64decode(encrypted_base64))

# Remove the padding to get the original plaintext
decrypted_text = unpad(decrypted_padded, DES.block_size).decode()

# Display decrypted text
print("Decrypted:", decrypted_text)
